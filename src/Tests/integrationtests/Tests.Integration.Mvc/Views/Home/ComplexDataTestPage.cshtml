@{
    ViewBag.Title = "Simple Data";
}

<table id="table-simple">
    <thead>
        <tr>
            <th>String</th>
            <th>Integer</th>
            <th>Double</th>
            <th>DateTime</th>
            <th>Boolean</th>

            <th>Single Nested String</th>
            <th>Single Nested Integer</th>
            <th>Single Nested Double</th>
            <th>Single Nested DateTime</th>
            <th>Single Nested Boolean</th>

            <th>Double Nested String</th>
            <th>Double Nested Integer</th>
            <th>Double Nested Double</th>
            <th>Double Nested DateTime</th>
            <th>Double Nested Boolean</th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th>String</th>
            <th>Integer</th>
            <th>Double</th>
            <th>DateTime</th>
            <th>Boolean</th>

            <th>Single Nested String</th>
            <th>Single Nested Integer</th>
            <th>Single Nested Double</th>
            <th>Single Nested DateTime</th>
            <th>Single Nested Boolean</th>

            <th>Double Nested String</th>
            <th>Double Nested Integer</th>
            <th>Double Nested Double</th>
            <th>Double Nested DateTime</th>
            <th>Double Nested Boolean</th>
        </tr>
    </tfoot>
    <tbody></tbody>
</table>
@(this.ViewBag.IsPaged as string)
@section Scripts {
    <script>
        var table = $('#table-simple').DataTable({
            "paging": @this.ViewBag.IsPaged,
            "proccessing": true,
            "serverSide": true,
            "ajax": {
                url: "/home/getcomplexdata",
                type: 'POST',
                data: function (data) {

                }
            },
            "columns": [
                { "data": "String" },
                { "data": "Integer" },
                { "data": "Double" },
                { "data": "DateTime" },
                { "data": "Boolean" },

                { "data": "ComplexModel.String" },
                { "data": "ComplexModel.Integer" },
                { "data": "ComplexModel.Double" },
                { "data": "ComplexModel.DateTime" },
                { "data": "ComplexModel.Boolean" },

                { "data": "ComplexModel.SimpleModel.String" },
                { "data": "ComplexModel.SimpleModel.Integer" },
                { "data": "ComplexModel.SimpleModel.Double" },
                { "data": "ComplexModel.SimpleModel.DateTime" },
                { "data": "ComplexModel.SimpleModel.Boolean" }
            ],
            "columnDefs": [
                {
                    "render": function (data, type, row) {
                        date = new Date(parseInt(row.DateTime.replace("/Date(", "").replace(")/", ""), 10));

                        return date.toUTCString();
                    },
                    "targets": 3
                },

                {
                    "render": function (data, type, row) {
                        date = new Date(parseInt(row.ComplexModel.DateTime.replace("/Date(", "").replace(")/", ""), 10));

                        return date.toUTCString();
                    },
                    "targets": 8
                },

                {
                    "render": function (data, type, row) {
                        date = new Date(parseInt(row.ComplexModel.SimpleModel.DateTime.replace("/Date(", "").replace(")/", ""), 10));

                        return date.toUTCString();
                    },
                    "targets": 13
                }
            ]
        });
    </script>
}