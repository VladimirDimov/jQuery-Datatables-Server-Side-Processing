@{
    ViewBag.Title = "Simple Data";
}

<table id="table-simple">
    <thead>
        <tr>
            <th>StringProperty</th>
            <th>Integer</th>
            <th>IntegerNullable</th>
            <th>UInt</th>
            <th>UIntNullable</th>

            <th>Long</th>
            <th>LongNullable</th>
            <th>ULong</th>
            <th>ULongNullable</th>

            <th>Short</th>`
            <th>ShortNullable</th>
            <th>UShort</th>
            <th>UShortNullable</th>

            <th>ByteProperty</th>
            <th>ByteNullable</th>
            <th>SByteProperty</th>
            <th>SByteNullable</th>

            <th>DoubleProperty</th>
            <th>DoubleNullable</th>

            <th>DecimalProperty</th>
            <th>DecimalNullable</th>

            <th>DateTime</th>
            <th>DateTimeNullable</th>
            <th>DateTimeOffset</th>
            <th>DateTimeOffsetNullable</th>

            <th>BooleanProperty</th>
            <th>BooleanNullable</th>

            <th>CharProperty</th>
            <th>CharNullable</th>

            <th>Nested Model StringProperty</th>
            <th>Nested Model Integer</th>
            <th>Nested Model IntegerNullable</th>
            <th>Nested Model UInt</th>
            <th>Nested Model UIntNullable</th>
                             
            <th>Nested Model Long</th>
            <th>Nested Model LongNullable</th>
            <th>Nested Model ULong</th>
            <th>Nested Model ULongNullable</th>
                             
            <th>Nested Model Short</th>
            <th>Nested Model ShortNullable</th>
            <th>Nested Model UShort</th>
            <th>Nested Model UShortNullable</th>
                             
            <th>Nested Model ByteProperty</th>
            <th>Nested Model ByteNullable</th>
            <th>Nested Model SByteProperty</th>
            <th>Nested Model SByteNullable</th>
                             
            <th>Nested Model DoubleProperty</th>
            <th>Nested Model DoubleNullable</th>
                             
            <th>Nested Model DecimalProperty</th>
            <th>Nested Model DecimalNullable</th>
                             
            <th>Nested Model DateTime</th>
            <th>Nested Model DateTimeNullable</th>
            <th>Nested Model DateTimeOffset</th>
            <th>Nested Model DateTimeOffsetNullable</th>
                             
            <th>Nested Model BooleanProperty</th>
            <th>Nested Model BooleanNullable</th>
                             
            <th>Nested Model CharProperty</th>
            <th>Nested Model CharNullable</th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th>StringProperty</th>
            <th>Integer</th>
            <th>IntegerNullable</th>
            <th>UInt</th>
            <th>UIntNullable</th>

            <th>Long</th>
            <th>LongNullable</th>
            <th>ULong</th>
            <th>ULongNullable</th>

            <th>Short</th>
            <th>ShortNullable</th>
            <th>UShort</th>
            <th>UShortNullable</th>

            <th>ByteProperty</th>
            <th>ByteNullable</th>
            <th>SByteProperty</th>
            <th>SByteNullable</th>

            <th>DoubleProperty</th>
            <th>DoubleNullable</th>

            <th>DecimalProperty</th>
            <th>DecimalNullable</th>

            <th>DateTime</th>
            <th>DateTimeNullable</th>
            <th>DateTimeOffset</th>
            <th>DateTimeOffsetNullable</th>

            <th>BooleanProperty</th>
            <th>BooleanNullable</th>

            <th>CharProperty</th>
            <th>CharNullable</th>

            <th>NestedModel.StringProperty</th>
            <th>NestedModel.Integer</th>
            <th>NestedModel.IntegerNullable</th>
            <th>NestedModel.UInt</th>
            <th>NestedModel.UIntNullable</th>

            <th>NestedModel.Long</th>
            <th>NestedModel.LongNullable</th>
            <th>NestedModel.ULong</th>
            <th>NestedModel.ULongNullable</th>

            <th>NestedModel.Short</th>
            <th>NestedModel.ShortNullable</th>
            <th>NestedModel.UShort</th>
            <th>NestedModel.UShortNullable</th>

            <th>NestedModel.ByteProperty</th>
            <th>NestedModel.ByteNullable</th>
            <th>NestedModel.SByteProperty</th>
            <th>NestedModel.SByteNullable</th>

            <th>NestedModel.DoubleProperty</th>
            <th>NestedModel.DoubleNullable</th>

            <th>NestedModel.DecimalProperty</th>
            <th>NestedModel.DecimalNullable</th>

            <th>NestedModel.DateTime</th>
            <th>NestedModel.DateTimeNullable</th>
            <th>NestedModel.DateTimeOffset</th>
            <th>NestedModel.DateTimeOffsetNullable</th>

            <th>NestedModel.BooleanProperty</th>
            <th>NestedModel.BooleanNullable</th>

            <th>NestedModel.CharProperty</th>
            <th>NestedModel.CharNullable</th>
        </tr>
    </tfoot>
    <tbody></tbody>
</table>

@section Scripts {
    <script>
        var table = $('#table-simple').DataTable({
            //"paging": true,
            //"searching": true,
            "proccessing": true,
            "serverSide": true,
            "ajax": {
                url: "/home/GetData",
                type: 'POST'
            },
            "columns": [
                { "data": "StringProperty" },

                { "data": "Integer", searchable: false },
                { "data": "IntegerNullable", searchable: false },
                { "data": "UInt", searchable: false },
                { "data": "UIntNullable", searchable: false },

                { "data": "Long", searchable: false },
                { "data": "LongNullable", searchable: false },
                { "data": "ULong", searchable: false },
                { "data": "ULongNullable", searchable: false },

                { "data": "Short", searchable: false },
                { "data": "ShortNullable", searchable: false },
                { "data": "UShort", searchable: false },
                { "data": "UShortNullable", searchable: false },

                { "data": "ByteProperty", searchable: false },
                { "data": "ByteNullable", searchable: false },
                { "data": "SByteProperty", searchable: false },
                { "data": "SByteNullable", searchable: false },

                { "data": "DoubleProperty", searchable: false },
                { "data": "DoubleNullable", searchable: false },

                { "data": "DecimalProperty", searchable: false },
                { "data": "DecimalNullable", searchable: false },

                { "data": "DateTime", searchable: false },
                { "data": "DateTimeNullable", searchable: false },
                { "data": "DateTimeOffset", searchable: false },
                { "data": "DateTimeOffsetNullable", searchable: false },

                { "data": "BooleanProperty", searchable: false },
                { "data": "BooleanNullable", searchable: false },

                { "data": "CharProperty", searchable: false },
                { "data": "CharNullable", searchable: false },

                { "data": "NestedModel.StringProperty", searchable: false },
                { "data": "NestedModel.Integer", searchable: false },
                { "data": "NestedModel.IntegerNullable", searchable: false },
                { "data": "NestedModel.UInt", searchable: false },
                { "data": "NestedModel.UIntNullable", searchable: false },

                { "data": "NestedModel.Long", searchable: false },
                { "data": "NestedModel.LongNullable", searchable: false },
                { "data": "NestedModel.ULong", searchable: false },
                { "data": "NestedModel.ULongNullable", searchable: false },

                { "data": "NestedModel.Short", searchable: false },
                { "data": "NestedModel.ShortNullable", searchable: false },
                { "data": "NestedModel.UShort", searchable: false },
                { "data": "NestedModel.UShortNullable", searchable: false },

                { "data": "NestedModel.ByteProperty", searchable: false },
                { "data": "NestedModel.ByteNullable", searchable: false },
                { "data": "NestedModel.SByteProperty", searchable: false },
                { "data": "NestedModel.SByteNullable", searchable: false },

                { "data": "NestedModel.DoubleProperty", searchable: false },
                { "data": "NestedModel.DoubleNullable", searchable: false },

                { "data": "NestedModel.DecimalProperty", searchable: false },
                { "data": "NestedModel.DecimalNullable", searchable: false },

                { "data": "NestedModel.DateTime", searchable: false },
                { "data": "NestedModel.DateTimeNullable", searchable: false },
                { "data": "NestedModel.DateTimeOffset", searchable: false },
                { "data": "NestedModel.DateTimeOffsetNullable", searchable: false },

                { "data": "NestedModel.BooleanProperty", searchable: false },
                { "data": "NestedModel.BooleanNullable", searchable: false },

                { "data": "NestedModel.CharProperty", searchable: true },
                { "data": "NestedModel.CharNullable", searchable: true },
            ],
            "columnDefs": [
                //{
                //    "render": function (data, type, row) {
                //        date = new Date(parseInt(row.DateTime.replace("/Date(", "").replace(")/", ""), 10));

                //        return date.toUTCString();
                //    },
                //    "targets": 3
                //},

                //{
                //    "render": function (data, type, row) {
                //        date = new Date(parseInt(row.ComplexModel.DateTime.replace("/Date(", "").replace(")/", ""), 10));

                //        return date.toUTCString();
                //    },
                //    "targets": 8
                //},

                //{
                //    "render": function (data, type, row) {
                //        date = new Date(parseInt(row.ComplexModel.SimpleModel.DateTime.replace("/Date(", "").replace(")/", ""), 10));

                //        return date.toUTCString();
                //    },
                //    "targets": 13
                //}
            ]
        });
    </script>
}